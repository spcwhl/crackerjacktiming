/*! Built with IMPACT - impactjs.com */

Number.prototype.map=function(istart,istop,ostart,ostop){return ostart+(ostop-ostart)*((this-istart)/(istop-istart));};Number.prototype.limit=function(min,max){return Math.min(max,Math.max(min,this));};Number.prototype.round=function(precision){precision=Math.pow(10,precision||0);return Math.round(this*precision)/precision;};Number.prototype.floor=function(){return Math.floor(this);};Number.prototype.ceil=function(){return Math.ceil(this);};Number.prototype.toInt=function(){return(this|0);};Array.prototype.erase=function(item){for(var i=this.length;i--;){if(this[i]===item){this.splice(i,1);}}
return this;};Array.prototype.random=function(){return this[Math.floor(Math.random()*this.length)];};Function.prototype.bind=function(bind){var self=this;return function(){var args=Array.prototype.slice.call(arguments);return self.apply(bind||null,args);};};(function(window){window.ig={game:null,debug:null,version:'1.18a',global:window,modules:{},resources:[],ready:false,baked:false,nocache:'',ua:{},lib:'lib/',_current:null,_loadQueue:[],_waitForOnload:0,$:function(selector){return selector.charAt(0)=='#'?document.getElementById(selector.substr(1)):document.getElementsByTagName(selector);},$new:function(name){return document.createElement(name);},copy:function(object){if(!object||typeof(object)!='object'||object instanceof HTMLElement||object instanceof ig.Class){return object;}
else if(object instanceof Array){var c=[];for(var i=0,l=object.length;i<l;i++){c[i]=ig.copy(object[i]);}
return c;}
else{var c={};for(var i in object){c[i]=ig.copy(object[i]);}
return c;}},merge:function(original,extended){for(var key in extended){var ext=extended[key];if(typeof(ext)!='object'||ext instanceof HTMLElement||ext instanceof ig.Class){original[key]=ext;}
else{if(!original[key]||typeof(original[key])!='object'){original[key]=(ext instanceof Array)?[]:{};}
ig.merge(original[key],ext);}}
return original;},ksort:function(obj){if(!obj||typeof(obj)!='object'){return[];}
var keys=[],values=[];for(var i in obj){keys.push(i);}
keys.sort();for(var i=0;i<keys.length;i++){values.push(obj[keys[i]]);}
return values;},module:function(name){if(ig._current){throw("Module '"+ig._current.name+"' defines nothing");}
if(ig.modules[name]&&ig.modules[name].body){throw("Module '"+name+"' is already defined");}
ig._current={name:name,requires:[],loaded:false,body:null};ig.modules[name]=ig._current;ig._loadQueue.push(ig._current);ig._initDOMReady();return ig;},requires:function(){ig._current.requires=Array.prototype.slice.call(arguments);return ig;},defines:function(body){name=ig._current.name;ig._current.body=body;ig._current=null;ig._execModules();},addResource:function(resource){ig.resources.push(resource);},setNocache:function(set){ig.nocache=set?'?'+Date.now():'';},log:function(){},show:function(name,number){},mark:function(msg,color){},_loadScript:function(name,requiredFrom){ig.modules[name]={name:name,requires:[],loaded:false,body:null};ig._waitForOnload++;var path=ig.lib+name.replace(/\./g,'/')+'.js'+ig.nocache;var script=ig.$new('script');script.type='text/javascript';script.src=path;script.onload=function(){ig._waitForOnload--;ig._execModules();};script.onerror=function(){throw('Failed to load module '+name+' at '+path+' '+'required from '+requiredFrom);};ig.$('head')[0].appendChild(script);},_execModules:function(){var modulesLoaded=false;for(var i=0;i<ig._loadQueue.length;i++){var m=ig._loadQueue[i];var dependenciesLoaded=true;for(var j=0;j<m.requires.length;j++){var name=m.requires[j];if(!ig.modules[name]){dependenciesLoaded=false;ig._loadScript(name,m.name);}
else if(!ig.modules[name].loaded){dependenciesLoaded=false;}}
if(dependenciesLoaded&&m.body){ig._loadQueue.splice(i,1);m.loaded=true;m.body();modulesLoaded=true;i--;}}
if(modulesLoaded){ig._execModules();}
else if(!ig.baked&&ig._waitForOnload==0&&ig._loadQueue.length!=0){var unresolved=[];for(var i=0;i<ig._loadQueue.length;i++){var unloaded=[];var requires=ig._loadQueue[i].requires;for(var j=0;j<requires.length;j++){var m=ig.modules[requires[j]];if(!m||!m.loaded){unloaded.push(requires[j]);}}
unresolved.push(ig._loadQueue[i].name+' (requires: '+unloaded.join(', ')+')');}
throw('Unresolved (circular?) dependencies. '+"Most likely there's a name/path mismatch for one of the listed modules:\n"+
unresolved.join('\n'));}},_DOMReady:function(){if(!ig.modules['dom.ready'].loaded){if(!document.body){return setTimeout(ig._DOMReady,13);}
ig.modules['dom.ready'].loaded=true;ig._waitForOnload--;ig._execModules();}
return 0;},_boot:function(){if(document.location.href.match(/\?nocache/)){ig.setNocache(true);}
ig.ua.pixelRatio=window.devicePixelRatio||1;ig.ua.viewport={width:window.innerWidth,height:window.innerHeight};ig.ua.screen={width:window.screen.availWidth*ig.ua.pixelRatio,height:window.screen.availHeight*ig.ua.pixelRatio};ig.ua.iPhone=/iPhone/i.test(navigator.userAgent);ig.ua.iPhone4=(ig.ua.iPhone&&ig.ua.pixelRatio==2);ig.ua.iPad=/iPad/i.test(navigator.userAgent);ig.ua.android=/android/i.test(navigator.userAgent);ig.ua.iOS=ig.ua.iPhone||ig.ua.iPad;ig.ua.mobile=ig.ua.iOS||ig.ua.android;},_initDOMReady:function(){if(ig.modules['dom.ready']){return;}
ig._boot();ig.modules['dom.ready']={requires:[],loaded:false,body:null};ig._waitForOnload++;if(document.readyState==='complete'){ig._DOMReady();}
else{document.addEventListener('DOMContentLoaded',ig._DOMReady,false);window.addEventListener('load',ig._DOMReady,false);}}};var initializing=false,fnTest=/xyz/.test(function(){xyz;})?/\bparent\b/:/.*/;window.ig.Class=function(){};var inject=function(prop){var proto=this.prototype;var parent={};for(var name in prop){if(typeof(prop[name])=="function"&&typeof(proto[name])=="function"&&fnTest.test(prop[name])){parent[name]=proto[name];proto[name]=(function(name,fn){return function(){var tmp=this.parent;this.parent=parent[name];var ret=fn.apply(this,arguments);this.parent=tmp;return ret;};})(name,prop[name]);}
else{proto[name]=prop[name];}}};window.ig.Class.extend=function(prop){var parent=this.prototype;initializing=true;var prototype=new this();initializing=false;for(var name in prop){if(typeof(prop[name])=="function"&&typeof(parent[name])=="function"&&fnTest.test(prop[name])){prototype[name]=(function(name,fn){return function(){var tmp=this.parent;this.parent=parent[name];var ret=fn.apply(this,arguments);this.parent=tmp;return ret;};})(name,prop[name]);}
else{prototype[name]=prop[name];}}
function Class(){if(!initializing){if(this.staticInstantiate){var obj=this.staticInstantiate.apply(this,arguments);if(obj){return obj;}}
for(var p in this){if(typeof(this[p])=='object'){this[p]=ig.copy(this[p]);}}
if(this.init){this.init.apply(this,arguments);}}
return this;}
Class.prototype=prototype;Class.constructor=Class;Class.extend=arguments.callee;Class.inject=inject;return Class;};})(window);

// lib/impact/image.js
ig.baked=true;ig.module('impact.image').defines(function(){ig.Image=ig.Class.extend({data:null,width:0,height:0,loaded:false,failed:false,loadCallback:null,path:'',staticInstantiate:function(path){return ig.Image.cache[path]||null;},init:function(path){this.path=path;this.load();},load:function(loadCallback){if(this.loaded){if(loadCallback){loadCallback(this.path,true);}
return;}
else if(!this.loaded&&ig.ready){this.loadCallback=loadCallback||null;this.data=new Image();this.data.onload=this.onload.bind(this);this.data.onerror=this.onerror.bind(this);this.data.src=this.path+ig.nocache;}
else{ig.addResource(this);}
ig.Image.cache[this.path]=this;},reload:function(){this.loaded=false;this.data=new Image();this.data.onload=this.onload.bind(this);this.data.src=this.path+'?'+Date.now();},onload:function(event){this.width=this.data.width;this.height=this.data.height;if(ig.system.scale!=1){this.resize(ig.system.scale);}
this.loaded=true;if(this.loadCallback){this.loadCallback(this.path,true);}},onerror:function(event){this.failed=true;if(this.loadCallback){this.loadCallback(this.path,false);}},resize:function(scale){var widthScaled=this.width*scale;var heightScaled=this.height*scale;var orig=ig.$new('canvas');orig.width=this.width;orig.height=this.height;var origCtx=orig.getContext('2d');origCtx.drawImage(this.data,0,0,this.width,this.height,0,0,this.width,this.height);var origPixels=origCtx.getImageData(0,0,this.width,this.height);var scaled=ig.$new('canvas');scaled.width=widthScaled;scaled.height=heightScaled;var scaledCtx=scaled.getContext('2d');var scaledPixels=scaledCtx.getImageData(0,0,widthScaled,heightScaled);for(var y=0;y<heightScaled;y++){for(var x=0;x<widthScaled;x++){var index=(Math.floor(y/scale)*this.width+Math.floor(x/scale))*4;var indexScaled=(y*widthScaled+x)*4;scaledPixels.data[indexScaled]=origPixels.data[index];scaledPixels.data[indexScaled+1]=origPixels.data[index+1];scaledPixels.data[indexScaled+2]=origPixels.data[index+2];scaledPixels.data[indexScaled+3]=origPixels.data[index+3];}}
scaledCtx.putImageData(scaledPixels,0,0);this.data=scaled;},draw:function(targetX,targetY,sourceX,sourceY,width,height){if(!this.loaded){return;}
var scale=ig.system.scale;sourceX=sourceX?sourceX*scale:0;sourceY=sourceY?sourceY*scale:0;width=(width?width:this.width)*scale;height=(height?height:this.height)*scale;ig.system.context.drawImage(this.data,sourceX,sourceY,width,height,ig.system.getDrawPos(targetX),ig.system.getDrawPos(targetY),width,height);ig.Image.drawCount++;},drawTile:function(targetX,targetY,tile,tileWidth,tileHeight,flipX,flipY){tileHeight=tileHeight?tileHeight:tileWidth;if(!this.loaded||tileWidth>this.width||tileHeight>this.height){return;}
var scale=ig.system.scale;var tileWidthScaled=tileWidth*scale;var tileHeightScaled=tileHeight*scale;var scaleX=flipX?-1:1;var scaleY=flipY?-1:1;if(flipX||flipY){ig.system.context.save();ig.system.context.scale(scaleX,scaleY);}
ig.system.context.drawImage(this.data,(Math.floor(tile*tileWidth)%this.width)*scale,(Math.floor(tile*tileWidth/this.width)*tileHeight)*scale,tileWidthScaled,tileHeightScaled,ig.system.getDrawPos(targetX)*scaleX-(flipX?tileWidthScaled:0),ig.system.getDrawPos(targetY)*scaleY-(flipY?tileHeightScaled:0),tileWidthScaled,tileHeightScaled);if(flipX||flipY){ig.system.context.restore();}
ig.Image.drawCount++;}});ig.Image.drawCount=0;ig.Image.cache={};ig.Image.reloadCache=function(){for(path in ig.Image.cache){ig.Image.cache[path].reload();}};});

// lib/impact/font.js
ig.baked=true;ig.module('impact.font').requires('impact.image').defines(function(){ig.Font=ig.Image.extend({widthMap:[],indices:[],firstChar:32,height:0,onload:function(ev){this._loadMetrics(this.data);this.parent(ev);},widthForString:function(s){var width=0;for(var i=0;i<s.length;i++){width+=this.widthMap[s.charCodeAt(i)-this.firstChar]+1;}
return width;},draw:function(text,x,y,align){if(typeof(text)!='string'){text=text.toString();}
if(align==ig.Font.ALIGN.RIGHT||align==ig.Font.ALIGN.CENTER){var width=0;for(var i=0;i<text.length;i++){var c=text.charCodeAt(i);width+=this.widthMap[c-this.firstChar]+1;}
x-=align==ig.Font.ALIGN.CENTER?width/2:width;}
for(var i=0;i<text.length;i++){var c=text.charCodeAt(i);x+=this._drawChar(c-this.firstChar,x,y);}
ig.Image.drawCount+=text.length;},_drawChar:function(c,targetX,targetY){if(!this.loaded||c<0||c>=this.indices.length){return 0;}
var scale=ig.system.scale;var charX=this.indices[c]*scale;var charY=0;var charWidth=this.widthMap[c]*scale;var charHeight=(this.height-2)*scale;ig.system.context.drawImage(this.data,charX,charY,charWidth,charHeight,ig.system.getDrawPos(targetX),ig.system.getDrawPos(targetY),charWidth,charHeight);return this.widthMap[c]+1;},_loadMetrics:function(image){this.height=image.height-1;this.widthMap=[];this.indices=[];var canvas=ig.$new('canvas');canvas.width=image.width;canvas.height=image.height;var ctx=canvas.getContext('2d');ctx.drawImage(image,0,0);var px=ctx.getImageData(0,image.height-1,image.width,1);var currentChar=0;var currentWidth=0;for(var x=0;x<image.width;x++){var index=x*4+3;if(px.data[index]!=0){currentWidth++;}
else if(px.data[index]==0&&currentWidth){this.widthMap.push(currentWidth);this.indices.push(x-currentWidth);currentChar++;currentWidth=0;}}
this.widthMap.push(currentWidth);this.indices.push(x-currentWidth);}});ig.Font.ALIGN={LEFT:0,RIGHT:1,CENTER:2};});

// lib/impact/sound.js
ig.baked=true;ig.module('impact.sound').defines(function(){ig.SoundManager=ig.Class.extend({clips:{},volume:1,format:null,init:function(){var probe=new Audio();for(var i=0;i<ig.Sound.use.length;i++){var format=ig.Sound.use[i];if(probe.canPlayType(format.mime)){this.format=format;break;}}
if(!this.format){ig.Sound.enabled=false;}},load:function(path,multiChannel,loadCallback){var realPath=path.match(/^(.*)\.[^\.]+$/)[1]+'.'+this.format.ext+ig.nocache;if(this.clips[path]){if(multiChannel&&this.clips[path].length<ig.Sound.channels){for(var i=this.clips[path].length;i<ig.Sound.channels;i++){var a=new Audio(realPath);a.load();this.clips[path].push(a);}}
return this.clips[path][0];}
var clip=new Audio(realPath);if(loadCallback){clip.addEventListener('canplaythrough',function(ev){this.removeEventListener('canplaythrough',arguments.callee,false);loadCallback(path,true,ev);},false);clip.addEventListener('error',function(ev){loadCallback(path,true,ev);},false);}
clip.load();this.clips[path]=[clip];if(multiChannel){for(var i=1;i<ig.Sound.channels;i++){var a=new Audio(realPath);a.load();this.clips[path].push(a);}}
return clip;},get:function(path){var channels=this.clips[path];for(var i=0,clip;clip=channels[i++];){if(clip.paused||clip.ended){if(clip.ended){clip.currentTime=0;}
return clip;}}
channels[0].pause();channels[0].currentTime=0;return channels[0];}});ig.Music=ig.Class.extend({tracks:[],currentTrack:null,currentIndex:0,random:false,_volume:1,_loop:false,_fadeInterval:0,_fadeTimer:null,_endedCallbackBound:null,init:function(){this._endedCallbackBound=this._endedCallback.bind(this);if(Object.defineProperty){Object.defineProperty(this,"volume",{get:this.getVolume.bind(this),set:this.setVolume.bind(this)});Object.defineProperty(this,"loop",{get:this.getLooping.bind(this),set:this.setLooping.bind(this)});}
else if(this.__defineGetter__){this.__defineGetter__('volume',this.getVolume.bind(this));this.__defineSetter__('volume',this.setVolume.bind(this));this.__defineGetter__('loop',this.getLooping.bind(this));this.__defineSetter__('loop',this.setLooping.bind(this));}},add:function(music){if(!ig.Sound.enabled){return;}
var path=music instanceof ig.Sound?music.path:music;var track=ig.soundManager.load(path,false);track.loop=this._loop;track.volume=this._volume;track.addEventListener('ended',this._endedCallbackBound,false);this.tracks.push(track);if(!this.currentTrack){this.currentTrack=track;}},next:function(){if(!this.tracks.length){return;}
this.stop();this.currentIndex=this.random?Math.floor(Math.random()*this.tracks.length):(this.currentIndex+1)%this.tracks.length;this.currentTrack=this.tracks[this.currentIndex];this.play();},pause:function(){if(!this.currentTrack){return;}
this.currentTrack.pause();},stop:function(){if(!this.currentTrack){return;}
this.currentTrack.pause();this.currentTrack.currentTime=0;},play:function(){if(!this.currentTrack){return;}
this.currentTrack.play();},getLooping:function(){return this._loop;},setLooping:function(l){this._loop=l;for(var i in this.tracks){this.tracks[i].loop=l;}},getVolume:function(){return this._volume;},setVolume:function(v){this._volume=v.limit(0,1);for(var i in this.tracks){this.tracks[i].volume=this._volume;}},fadeOut:function(time){if(!this.currentTrack){return;}
clearInterval(this._fadeInterval);this.fadeTimer=new ig.Timer(time);this._fadeInterval=setInterval(this._fadeStep.bind(this),50);},_fadeStep:function(){var v=this.fadeTimer.delta().map(-this.fadeTimer.target,0,1,0).limit(0,1)*this._volume;if(v<=0.01){this.stop();this.currentTrack.volume=this._volume;clearInterval(this._fadeInterval);}
else{this.currentTrack.volume=v;}},_endedCallback:function(){if(this._loop){this.play();}
else{this.next();}}});ig.Sound=ig.Class.extend({path:'',volume:1,currentClip:null,multiChannel:true,init:function(path,multiChannel){this.path=path;this.multiChannel=(multiChannel!==false);this.load();},load:function(loadCallback){if(!ig.Sound.enabled){if(loadCallback){loadCallback(this.path,true);}
return;}
if(ig.ready){ig.soundManager.load(this.path,this.multiChannel,loadCallback);}
else{ig.addResource(this);}},play:function(){if(!ig.Sound.enabled){return;}
this.currentClip=ig.soundManager.get(this.path);this.currentClip.volume=ig.soundManager.volume*this.volume;this.currentClip.play();},stop:function(){if(this.currentClip){this.currentClip.pause();this.currentClip.currentTime=0;}}});ig.Sound.FORMAT={MP3:{ext:'mp3',mime:'audio/mpeg'},M4A:{ext:'m4a',mime:'audio/mp4; codecs=mp4a'},OGG:{ext:'ogg',mime:'audio/ogg; codecs=vorbis'},WEBM:{ext:'webm',mime:'audio/webm; codecs=vorbis'},CAF:{ext:'caf',mime:'audio/x-caf'}};ig.Sound.use=[ig.Sound.FORMAT.OGG,ig.Sound.FORMAT.MP3];ig.Sound.channels=4;ig.Sound.enabled=true;});

// lib/impact/loader.js
ig.baked=true;ig.module('impact.loader').requires('impact.image','impact.font','impact.sound').defines(function(){ig.Loader=ig.Class.extend({resources:[],gameClass:null,status:0,done:false,_unloaded:[],_drawStatus:0,_intervalId:0,_loadCallbackBound:null,init:function(gameClass,resources){this.gameClass=gameClass;this.resources=resources;this._loadCallbackBound=this._loadCallback.bind(this);for(var i=0;i<this.resources.length;i++){this._unloaded.push(this.resources[i].path);}},load:function(){ig.system.clear('#000');if(!this.resources.length){this.end();return;}
for(var i=0;i<this.resources.length;i++){this.loadResource(this.resources[i]);}
this._intervalId=setInterval(this.draw.bind(this),16);},loadResource:function(res){res.load(this._loadCallbackBound);},end:function(){if(this.done){return;}
this.done=true;clearInterval(this._intervalId);ig.system.setGame(this.gameClass);},draw:function(){this._drawStatus+=(this.status-this._drawStatus)/5;var s=ig.system.scale;var w=ig.system.width*0.6;var h=ig.system.height*0.1;var x=ig.system.width*0.5-w/2;var y=ig.system.height*0.5-h/2;ig.system.context.fillStyle='#000';ig.system.context.fillRect(0,0,480,320);ig.system.context.fillStyle='#fff';ig.system.context.fillRect(x*s,y*s,w*s,h*s);ig.system.context.fillStyle='#000';ig.system.context.fillRect(x*s+s,y*s+s,w*s-s-s,h*s-s-s);ig.system.context.fillStyle='#fff';ig.system.context.fillRect(x*s,y*s,w*s*this._drawStatus,h*s);},_loadCallback:function(path,status){if(status){this._unloaded.erase(path);}
else{throw('Failed to load resource: '+path);}
this.status=1-(this._unloaded.length/this.resources.length);if(this._unloaded.length==0){setTimeout(this.end.bind(this),250);}}});});

// lib/impact/timer.js
ig.baked=true;ig.module('impact.timer').defines(function(){ig.Timer=ig.Class.extend({target:0,base:0,last:0,init:function(seconds){this.base=ig.Timer.time;this.last=ig.Timer.time;this.target=seconds||0;},set:function(seconds){this.target=seconds||0;this.base=ig.Timer.time;},reset:function(){this.base=ig.Timer.time;},tick:function(){var delta=ig.Timer.time-this.last;this.last=ig.Timer.time;return delta;},delta:function(){return ig.Timer.time-this.base-this.target;}});ig.Timer._last=0;ig.Timer.time=0;ig.Timer.timeScale=1;ig.Timer.maxStep=0.05;ig.Timer.step=function(){var current=Date.now();var delta=(current-ig.Timer._last)/1000;ig.Timer.time+=Math.min(delta,ig.Timer.maxStep)*ig.Timer.timeScale;ig.Timer._last=current;};});

// lib/impact/system.js
ig.baked=true;ig.module('impact.system').requires('impact.timer','impact.image').defines(function(){ig.System=ig.Class.extend({fps:30,width:320,height:240,realWidth:320,realHeight:240,scale:1,tick:0,intervalId:0,newGameClass:null,running:false,delegate:null,clock:null,canvas:null,context:null,smoothPositioning:true,init:function(canvasId,fps,width,height,scale){this.fps=fps;this.clock=new ig.Timer();this.canvas=ig.$(canvasId);this.resize(width,height,scale);this.context=this.canvas.getContext('2d');},resize:function(width,height,scale){this.width=width;this.height=height;this.scale=scale||this.scale;this.realWidth=this.width*this.scale;this.realHeight=this.height*this.scale;this.canvas.width=this.realWidth;this.canvas.height=this.realHeight;},setGame:function(gameClass){if(this.running){this.newGameClass=gameClass;}
else{this.setGameNow(gameClass);}},setGameNow:function(gameClass){ig.game=new(gameClass)();ig.system.setDelegate(ig.game);},setDelegate:function(object){if(typeof(object.run)=='function'){this.delegate=object;this.startRunLoop();}else{throw('System.setDelegate: No run() function in object');}},stopRunLoop:function(){clearInterval(this.intervalId);this.running=false;},startRunLoop:function(){this.stopRunLoop();this.intervalId=setInterval(this.run.bind(this),1000/this.fps);this.running=true;},clear:function(color){this.context.fillStyle=color;this.context.fillRect(0,0,this.realWidth,this.realHeight);},run:function(){ig.Timer.step();this.tick=this.clock.tick();this.delegate.run();ig.input.clearPressed();if(this.newGameClass){this.setGameNow(this.newGameClass);this.newGameClass=null;}},getDrawPos:function(p){return this.smoothPositioning?Math.round(p*this.scale):Math.round(p)*this.scale;}});});

// lib/impact/input.js
ig.baked=true;ig.module('impact.input').defines(function(){ig.KEY={'MOUSE1':-1,'MOUSE2':-3,'MWHEEL_UP':-4,'MWHEEL_DOWN':-5,'BACKSPACE':8,'TAB':9,'ENTER':13,'PAUSE':19,'CAPS':20,'ESC':27,'SPACE':32,'PAGE_UP':33,'PAGE_DOWN':34,'END':35,'HOME':36,'LEFT_ARROW':37,'UP_ARROW':38,'RIGHT_ARROW':39,'DOWN_ARROW':40,'INSERT':45,'DELETE':46,'_0':48,'_1':49,'_2':50,'_3':51,'_4':52,'_5':53,'_6':54,'_7':55,'_8':56,'_9':57,'A':65,'B':66,'C':67,'D':68,'E':69,'F':70,'G':71,'H':72,'I':73,'J':74,'K':75,'L':76,'M':77,'N':78,'O':79,'P':80,'Q':81,'R':82,'S':83,'T':84,'U':85,'V':86,'W':87,'X':88,'Y':89,'Z':90,'NUMPAD_0':96,'NUMPAD_1':97,'NUMPAD_2':98,'NUMPAD_3':99,'NUMPAD_4':100,'NUMPAD_5':101,'NUMPAD_6':102,'NUMPAD_7':103,'NUMPAD_8':104,'NUMPAD_9':105,'MULTIPLY':106,'ADD':107,'SUBSTRACT':109,'DECIMAL':110,'DIVIDE':111,'F1':112,'F2':113,'F3':114,'F4':115,'F5':116,'F6':117,'F7':118,'F8':119,'F9':120,'F10':121,'F11':122,'F12':123,'SHIFT':16,'CTRL':17,'ALT':18,'PLUS':187,'COMMA':188,'MINUS':189,'PERIOD':190};ig.Input=ig.Class.extend({bindings:{},actions:{},presses:{},locks:{},delayedKeyup:[],isUsingMouse:false,isUsingKeyboard:false,isUsingAccelerometer:false,mouse:{x:0,y:0},accel:{x:0,y:0,z:0},initMouse:function(){if(this.isUsingMouse){return;}
this.isUsingMouse=true;window.addEventListener('mousewheel',this.mousewheel.bind(this),false);ig.system.canvas.addEventListener('contextmenu',this.contextmenu.bind(this),false);ig.system.canvas.addEventListener('mousedown',this.keydown.bind(this),false);ig.system.canvas.addEventListener('mouseup',this.keyup.bind(this),false);ig.system.canvas.addEventListener('mousemove',this.mousemove.bind(this),false);ig.system.canvas.addEventListener('touchstart',this.keydown.bind(this),false);ig.system.canvas.addEventListener('touchend',this.keyup.bind(this),false);ig.system.canvas.addEventListener('touchmove',this.mousemove.bind(this),false);},initKeyboard:function(){if(this.isUsingKeyboard){return;}
this.isUsingKeyboard=true;window.addEventListener('keydown',this.keydown.bind(this),false);window.addEventListener('keyup',this.keyup.bind(this),false);},initAccelerometer:function(){if(this.isUsingAccelerometer){return;}
window.addEventListener('devicemotion',this.devicemotion.bind(this),false);},mousewheel:function(event){var code=event.wheel>0?ig.KEY.MWHEEL_UP:ig.KEY.MWHEEL_DOWN;var action=this.bindings[code];if(action){this.actions[action]=true;this.presses[action]=true;event.stopPropagation();this.delayedKeyup.push(action);}},mousemove:function(event){var el=ig.system.canvas;var pos={left:0,top:0};while(el!=null){pos.left+=el.offsetLeft;pos.top+=el.offsetTop;el=el.offsetParent;}
var tx=event.pageX;var ty=event.pageY;if(event.touches){tx=event.touches[0].clientX;ty=event.touches[0].clientY;}
this.mouse.x=(tx-pos.left)/ig.system.scale;this.mouse.y=(ty-pos.top)/ig.system.scale;},contextmenu:function(event){if(this.bindings[ig.KEY.MOUSE2]){event.stopPropagation();event.preventDefault();}},keydown:function(event){if(event.target.type=='text'){return;}
var code=event.type=='keydown'?event.keyCode:(event.button==2?ig.KEY.MOUSE2:ig.KEY.MOUSE1);if(event.type=='touchstart'||event.type=='mousedown'){this.mousemove(event);}
var action=this.bindings[code];if(action){this.actions[action]=true;if(!this.locks[action]){this.presses[action]=true;this.locks[action]=true;}
event.stopPropagation();event.preventDefault();}},keyup:function(event){if(event.target.type=='text'){return;}
var code=event.type=='keyup'?event.keyCode:(event.button==2?ig.KEY.MOUSE2:ig.KEY.MOUSE1);var action=this.bindings[code];if(action){this.delayedKeyup.push(action);event.stopPropagation();event.preventDefault();}},devicemotion:function(event){this.accel=event.accelerationIncludingGravity;},bind:function(key,action){if(key<0){this.initMouse();}
else if(key>0){this.initKeyboard();}
this.bindings[key]=action;},bindTouch:function(selector,action){var element=ig.$(selector);var that=this;element.addEventListener('touchstart',function(ev){that.touchStart(ev,action);},false);element.addEventListener('touchend',function(ev){that.touchEnd(ev,action);},false);},unbind:function(key){this.bindings[key]=null;},unbindAll:function(){this.bindings=[];},state:function(action){return this.actions[action];},pressed:function(action){return this.presses[action];},clearPressed:function(){for(var i=0;i<this.delayedKeyup.length;i++){var action=this.delayedKeyup[i];this.actions[action]=false;this.locks[action]=false;}
this.delayedKeyup=[];this.presses={};},touchStart:function(event,action){this.actions[action]=true;this.presses[action]=true;event.stopPropagation();event.preventDefault();return false;},touchEnd:function(event,action){this.delayedKeyup.push(action);event.stopPropagation();event.preventDefault();return false;}});});

// lib/impact/impact.js
ig.baked=true;ig.module('impact.impact').requires('dom.ready','impact.loader','impact.system','impact.input','impact.sound').defines(function(){ig.main=function(canvasId,gameClass,fps,width,height,scale,loaderClass){ig.system=new ig.System(canvasId,fps,width,height,scale||1);ig.input=new ig.Input();ig.soundManager=new ig.SoundManager();ig.music=new ig.Music();ig.ready=true;var loader=new(loaderClass||ig.Loader)(gameClass,ig.resources);loader.load();};});

// lib/impact/animation.js
ig.baked=true;ig.module('impact.animation').requires('impact.timer','impact.image').defines(function(){ig.AnimationSheet=ig.Class.extend({width:8,height:8,image:null,init:function(path,width,height){this.width=width;this.height=height;this.image=new ig.Image(path);}});ig.Animation=ig.Class.extend({sheet:null,timer:null,sequence:[],flip:{x:false,y:false},pivot:{x:0,y:0},frame:0,tile:0,loopCount:0,alpha:1,angle:0,init:function(sheet,frameTime,sequence,stop){this.sheet=sheet;this.pivot={x:sheet.width/2,y:sheet.height/2};this.timer=new ig.Timer();this.frameTime=frameTime;this.sequence=sequence;this.stop=!!stop;this.tile=this.sequence[0];},rewind:function(){this.timer.reset();this.loopCount=0;this.tile=this.sequence[0];return this;},gotoFrame:function(f){this.timer.set(this.frameTime*-f);this.update();},gotoRandomFrame:function(){this.gotoFrame(Math.floor(Math.random()*this.sequence.length))},update:function(){var frameTotal=Math.floor(this.timer.delta()/this.frameTime);this.loopCount=Math.floor(frameTotal/this.sequence.length);if(this.stop&&this.loopCount>0){this.frame=this.sequence.length-1;}
else{this.frame=frameTotal%this.sequence.length;}
this.tile=this.sequence[this.frame];},draw:function(targetX,targetY){var bbsize=Math.max(this.sheet.width,this.sheet.height);if(targetX>ig.system.width||targetY>ig.system.height||targetX+bbsize<0||targetY+bbsize<0){return;}
if(this.alpha!=1){ig.system.context.globalAlpha=this.alpha;}
if(this.angle==0){this.sheet.image.drawTile(targetX,targetY,this.tile,this.sheet.width,this.sheet.height,this.flip.x,this.flip.y);}
else{ig.system.context.save();ig.system.context.translate(ig.system.getDrawPos(targetX+this.pivot.x),ig.system.getDrawPos(targetY+this.pivot.y));ig.system.context.rotate(this.angle);this.sheet.image.drawTile(-this.pivot.x,-this.pivot.y,this.tile,this.sheet.width,this.sheet.height,this.flip.x,this.flip.y);ig.system.context.restore();}
if(this.alpha!=1){ig.system.context.globalAlpha=1;}}});});

// lib/impact/entity.js
ig.baked=true;ig.module('impact.entity').requires('impact.animation','impact.impact').defines(function(){ig.Entity=ig.Class.extend({id:0,settings:{},size:{x:16,y:16},offset:{x:0,y:0},pos:{x:0,y:0},last:{x:0,y:0},vel:{x:0,y:0},accel:{x:0,y:0},friction:{x:0,y:0},maxVel:{x:100,y:100},zIndex:0,gravityFactor:1,standing:false,bounciness:0,minBounceVelocity:40,anims:{},animSheet:null,currentAnim:null,health:10,type:0,checkAgainst:0,collides:0,_killed:false,init:function(x,y,settings){this.id=++ig.Entity._lastId;this.pos.x=x;this.pos.y=y;ig.merge(this,settings);},addAnim:function(name,frameTime,sequence,stop){if(!this.animSheet){throw('No animSheet to add the animation '+name+' to.');}
var a=new ig.Animation(this.animSheet,frameTime,sequence,stop);this.anims[name]=a;if(!this.currentAnim){this.currentAnim=a;}
return a;},update:function(){this.last.x=this.pos.x;this.last.y=this.pos.y;this.vel.y+=ig.game.gravity*ig.system.tick*this.gravityFactor;this.vel.x=this.getNewVelocity(this.vel.x,this.accel.x,this.friction.x,this.maxVel.x);this.vel.y=this.getNewVelocity(this.vel.y,this.accel.y,this.friction.y,this.maxVel.y);var mx=this.vel.x*ig.system.tick;var my=this.vel.y*ig.system.tick;var res=ig.game.collisionMap.trace(this.pos.x,this.pos.y,mx,my,this.size.x,this.size.y);this.handleMovementTrace(res);if(this.currentAnim){this.currentAnim.update();}},getNewVelocity:function(vel,accel,friction,max){if(accel){return(vel+accel*ig.system.tick).limit(-max,max);}
else if(friction){var delta=friction*ig.system.tick;if(vel-delta>0){return vel-delta;}
else if(vel+delta<0){return vel+delta;}
else{return 0;}}
return vel.limit(-max,max);},handleMovementTrace:function(res){this.standing=false;if(res.collision.y){if(this.bounciness>0&&Math.abs(this.vel.y)>this.minBounceVelocity){this.vel.y*=-this.bounciness;}
else{if(this.vel.y>0){this.standing=true;}
this.vel.y=0;}}
if(res.collision.x){if(this.bounciness>0&&Math.abs(this.vel.x)>this.minBounceVelocity){this.vel.x*=-this.bounciness;}
else{this.vel.x=0;}}
this.pos=res.pos;},draw:function(){if(this.currentAnim){this.currentAnim.draw(Math.round(this.pos.x)-this.offset.x-ig.game.screen.x,Math.round(this.pos.y)-this.offset.y-ig.game.screen.y);}},kill:function(){ig.game.removeEntity(this);},receiveDamage:function(amount,from){this.health-=amount;if(this.health<=0){this.kill();}},touches:function(other){return!(this.pos.x>other.pos.x+other.size.x||this.pos.x+this.size.x<other.pos.x||this.pos.y>other.pos.y+other.size.y||this.pos.y+this.size.y<other.pos.y);},distanceTo:function(other){var xd=(this.pos.x+this.size.x/2)-(other.pos.x+other.size.x/2);var yd=(this.pos.y+this.size.y/2)-(other.pos.y+other.size.y/2);return Math.sqrt(xd*xd+yd*yd);},angleTo:function(other){return Math.atan2((other.pos.y+other.size.y/2)-(this.pos.y+this.size.y/2),(other.pos.x+other.size.x/2)-(this.pos.x+this.size.x/2));},check:function(other){},collideWith:function(other,axis){}});ig.Entity._lastId=0;ig.Entity.COLLIDES={NEVER:0,LITE:1,PASSIVE:2,ACTIVE:4,FIXED:8};ig.Entity.TYPE={NONE:0,A:1,B:2,BOTH:3};ig.Entity.checkPair=function(a,b){if(a.checkAgainst&b.type){a.check(b);}
if(b.checkAgainst&a.type){b.check(a);}
if(a.collides&&b.collides&&a.collides+b.collides>ig.Entity.COLLIDES.ACTIVE){ig.Entity.solveCollision(a,b);}};ig.Entity.solveCollision=function(a,b){var weak=null;if(a.collides==ig.Entity.COLLIDES.LITE||b.collides==ig.Entity.COLLIDES.FIXED){weak=a;}
else if(b.collides==ig.Entity.COLLIDES.LITE||a.collides==ig.Entity.COLLIDES.FIXED){weak=b;}
if(a.last.x+a.size.x>b.last.x&&a.last.x<b.last.x+b.size.x){if(a.last.y<b.last.y){ig.Entity.seperateOnYAxis(a,b,weak);}
else{ig.Entity.seperateOnYAxis(b,a,weak);}
a.collideWith(b,'y');b.collideWith(a,'y');}
else if(a.last.y+a.size.y>b.last.y&&a.last.y<b.last.y+b.size.y){if(a.last.x<b.last.x){ig.Entity.seperateOnXAxis(a,b,weak);}
else{ig.Entity.seperateOnXAxis(b,a,weak);}
a.collideWith(b,'x');b.collideWith(a,'x');}};ig.Entity.seperateOnXAxis=function(left,right,weak){var nudge=(left.pos.x+left.size.x-right.pos.x);if(weak){var strong=left===weak?right:left;weak.vel.x=-weak.vel.x*weak.bounciness+strong.vel.x;var resWeak=ig.game.collisionMap.trace(weak.pos.x,weak.pos.y,weak==left?-nudge:nudge,0,weak.size.x,weak.size.y);weak.pos.x=resWeak.pos.x;}
else{var v2=(left.vel.x-right.vel.x)/2;left.vel.x=-v2;right.vel.x=v2;var resLeft=ig.game.collisionMap.trace(left.pos.x,left.pos.y,-nudge/2,0,left.size.x,left.size.y);left.pos.x=Math.floor(resLeft.pos.x);var resRight=ig.game.collisionMap.trace(right.pos.x,right.pos.y,nudge/2,0,right.size.x,right.size.y);right.pos.x=Math.ceil(resRight.pos.x);}};ig.Entity.seperateOnYAxis=function(top,bottom,weak){var nudge=(top.pos.y+top.size.y-bottom.pos.y);if(weak){var strong=top===weak?bottom:top;weak.vel.y=-weak.vel.y*weak.bounciness+strong.vel.y;var nudgeX=0;if(weak==top&&Math.abs(weak.vel.y-strong.vel.y)<weak.minBounceVelocity){weak.standing=true;nudgeX=strong.vel.x*ig.system.tick;}
var resWeak=ig.game.collisionMap.trace(weak.pos.x,weak.pos.y,nudgeX,weak==top?-nudge:nudge,weak.size.x,weak.size.y);weak.pos.y=resWeak.pos.y;weak.pos.x=resWeak.pos.x;}
else if(ig.game.gravity&&(bottom.standing||top.vel.y>0)){var resTop=ig.game.collisionMap.trace(top.pos.x,top.pos.y,0,-(top.pos.y+top.size.y-bottom.pos.y),top.size.x,top.size.y);top.pos.y=resTop.pos.y;if(top.bounciness>0&&top.vel.y>top.minBounceVelocity){top.vel.y*=-top.bounciness;}
else{top.standing=true;top.vel.y=0;}}
else{var v2=(top.vel.y-bottom.vel.y)/2;top.vel.y=-v2;bottom.vel.y=v2;var nudgeX=bottom.vel.x*ig.system.tick;var resTop=ig.game.collisionMap.trace(top.pos.x,top.pos.y,nudgeX,-nudge/2,top.size.x,top.size.y);top.pos.y=resTop.pos.y;var resBottom=ig.game.collisionMap.trace(bottom.pos.x,bottom.pos.y,0,nudge/2,bottom.size.x,bottom.size.y);bottom.pos.y=resBottom.pos.y;}};});

// lib/impact/map.js
ig.baked=true;ig.module('impact.map').defines(function(){ig.Map=ig.Class.extend({tilesize:8,width:1,height:1,data:[[]],init:function(tilesize,data){this.tilesize=tilesize;this.data=data;this.height=data.length;this.width=data[0].length;},getTile:function(x,y){var tx=Math.floor(x/this.tilesize);var ty=Math.floor(y/this.tilesize);if((tx>=0&&tx<this.width)&&(ty>=0&&ty<this.height)){return this.data[ty][tx];}
else{return 0;}},setTile:function(x,y,tile){var tx=Math.floor(x/this.tilesize);var ty=Math.floor(y/this.tilesize);if((tx>=0&&tx<this.width)&&(ty>=0&&ty<this.height)){this.data[ty][tx]=tile;}}});});

// lib/impact/collision-map.js
ig.baked=true;ig.module('impact.collision-map').requires('impact.map').defines(function(){ig.CollisionMap=ig.Map.extend({firstSolidTile:1,lastSolidTile:255,init:function(tilesize,data){this.parent(tilesize,data);},trace:function(x,y,vx,vy,objectWidth,objectHeight){var res={collision:{x:false,y:false},pos:{x:x,y:y},tile:{x:0,y:0}};var steps=Math.ceil(Math.max(Math.abs(vx),Math.abs(vy))/this.tilesize);if(steps>1){var sx=vx/steps;var sy=vy/steps;for(var i=0;i<steps&&(sx||sy);i++){this._traceStep(res,x,y,sx,sy,objectWidth,objectHeight);x=res.pos.x;y=res.pos.y;if(res.collision.x){sx=0;}
if(res.collision.y){sy=0;}}}
else{this._traceStep(res,x,y,vx,vy,objectWidth,objectHeight);}
return res;},_traceStep:function(res,x,y,vx,vy,width,height){res.pos.x+=vx;res.pos.y+=vy;if(vx){var pxOffsetX=(vx>0?width:0);var tileOffsetX=(vx<0?this.tilesize:0);var firstTileY=Math.floor(y/this.tilesize);var lastTileY=Math.ceil((y+height)/this.tilesize);var tileX=Math.floor((x+vx+pxOffsetX)/this.tilesize);if(lastTileY>=0&&firstTileY<this.height&&tileX>=0&&tileX<this.width){for(var tileY=firstTileY;tileY<lastTileY;tileY++){var t=this.data[tileY]&&this.data[tileY][tileX];if(t>=this.firstSolidTile&&t<=this.lastSolidTile){res.collision.x=true;res.tile.x=t;res.pos.x=tileX*this.tilesize-pxOffsetX+tileOffsetX;break;}}}}
if(vy){var pxOffsetY=(vy>0?height:0);var tileOffsetY=(vy<0?this.tilesize:0);var firstTileX=Math.floor(res.pos.x/this.tilesize);var lastTileX=Math.ceil((res.pos.x+width)/this.tilesize);var tileY=Math.floor((y+vy+pxOffsetY)/this.tilesize);if(lastTileX>=0&&firstTileX<this.width&&tileY>=0&&tileY<this.height){for(var tileX=firstTileX;tileX<lastTileX;tileX++){var t=this.data[tileY]&&this.data[tileY][tileX];if(t>=this.firstSolidTile&&t<=this.lastSolidTile){res.collision.y=true;res.tile.y=t;res.pos.y=tileY*this.tilesize-pxOffsetY+tileOffsetY;break;}}}}}});ig.CollisionMap.staticNoCollision={trace:function(x,y,vx,vy){return{collision:{x:false,y:false},pos:{x:x+vx,y:y+vy},tile:{x:0,y:0}};}};});

// lib/impact/background-map.js
ig.baked=true;ig.module('impact.background-map').requires('impact.map','impact.image').defines(function(){ig.BackgroundMap=ig.Map.extend({tiles:null,scroll:{x:0,y:0},distance:1,repeat:false,tilesetName:'',foreground:false,enabled:true,preRender:false,preRenderedChunks:null,chunkSize:512,debugChunks:false,anims:{},init:function(tilesize,data,tileset){this.parent(tilesize,data);this.setTileset(tileset);},setTileset:function(tileset){this.tilesetName=tileset instanceof ig.Image?tileset.path:tileset;this.tiles=new ig.Image(this.tilesetName);this.preRenderedChunks=null;},setScreenPos:function(x,y){this.scroll.x=x/this.distance;this.scroll.y=y/this.distance;},preRenderMapToChunks:function(){var totalWidth=this.width*this.tilesize*ig.system.scale,totalHeight=this.height*this.tilesize*ig.system.scale;var chunkCols=Math.ceil(totalWidth/this.chunkSize),chunkRows=Math.ceil(totalHeight/this.chunkSize);this.preRenderedChunks=[];for(var y=0;y<chunkRows;y++){this.preRenderedChunks[y]=[];for(var x=0;x<chunkCols;x++){var chunkWidth=(x==chunkCols-1)?totalWidth-x*this.chunkSize:this.chunkSize;var chunkHeight=(y==chunkRows-1)?totalHeight-y*this.chunkSize:this.chunkSize;this.preRenderedChunks[y][x]=this.preRenderChunk(x,y,chunkWidth,chunkHeight);}}},preRenderChunk:function(cx,cy,w,h){var tw=w/this.tilesize/ig.system.scale+1;th=h/this.tilesize/ig.system.scale+1;var nx=(cx*this.chunkSize/ig.system.scale)%this.tilesize,ny=(cy*this.chunkSize/ig.system.scale)%this.tilesize;var tx=Math.floor(cx*this.chunkSize/this.tilesize/ig.system.scale),ty=Math.floor(cy*this.chunkSize/this.tilesize/ig.system.scale);var chunk=ig.$new('canvas');chunk.width=w;chunk.height=h;var oldContext=ig.system.context;ig.system.context=chunk.getContext("2d");for(var x=0;x<tw;x++){for(var y=0;y<th;y++){if(x+tx<this.width&&y+ty<this.height){var tile=this.data[y+ty][x+tx];if(tile){this.tiles.drawTile(x*this.tilesize-nx,y*this.tilesize-ny,tile-1,this.tilesize);}}}}
ig.system.context=oldContext;return chunk;},draw:function(){if(!this.tiles.loaded||!this.enabled){return;}
if(this.preRender){this.drawPreRendered();}
else{this.drawTiled();}},drawPreRendered:function(){if(!this.preRenderedChunks){this.preRenderMapToChunks();}
var dx=ig.system.getDrawPos(this.scroll.x),dy=ig.system.getDrawPos(this.scroll.y);if(this.repeat){dx%=this.width*this.tilesize*ig.system.scale;dy%=this.height*this.tilesize*ig.system.scale;}
var minChunkX=Math.max(Math.floor(dx/this.chunkSize),0),minChunkY=Math.max(Math.floor(dy/this.chunkSize),0),maxChunkX=Math.ceil((dx+ig.system.realWidth)/this.chunkSize),maxChunkY=Math.ceil((dy+ig.system.realHeight)/this.chunkSize),maxRealChunkX=this.preRenderedChunks[0].length,maxRealChunkY=this.preRenderedChunks.length;if(!this.repeat){maxChunkX=Math.min(maxChunkX,maxRealChunkX);maxChunkY=Math.min(maxChunkY,maxRealChunkY);}
var nudgeY=0;for(var cy=minChunkY;cy<maxChunkY;cy++){var nudgeX=0;for(var cx=minChunkX;cx<maxChunkX;cx++){var chunk=this.preRenderedChunks[cy%maxRealChunkY][cx%maxRealChunkX];var x=-dx+cx*this.chunkSize-nudgeX;var y=-dy+cy*this.chunkSize-nudgeY;ig.system.context.drawImage(chunk,x,y);ig.Image.drawCount++;if(this.debugChunks){ig.system.context.strokeStyle='#f0f';ig.system.context.strokeRect(x,y,this.chunkSize,this.chunkSize);}
if(this.repeat&&chunk.width<this.chunkSize&&x+chunk.width<ig.system.realWidth){nudgeX=this.chunkSize-chunk.width;maxChunkX++;}}
if(this.repeat&&chunk.height<this.chunkSize&&y+chunk.height<ig.system.realHeight){nudgeY=this.chunkSize-chunk.height;maxChunkY++;}}},drawTiled:function(){var tile=0,anim=null,tileOffsetX=(this.scroll.x/this.tilesize).toInt(),tileOffsetY=(this.scroll.y/this.tilesize).toInt(),pxOffsetX=this.scroll.x%this.tilesize,pxOffsetY=this.scroll.y%this.tilesize,pxMinX=-pxOffsetX-this.tilesize,pxMinY=-pxOffsetY-this.tilesize,pxMaxX=ig.system.width+this.tilesize-pxOffsetX,pxMaxY=ig.system.height+this.tilesize-pxOffsetY;for(var mapY=-1,pxY=pxMinY;pxY<pxMaxY;mapY++,pxY+=this.tilesize){var tileY=mapY+tileOffsetY;if(tileY>=this.height||tileY<0){if(!this.repeat){continue;}
tileY=tileY>0?tileY%this.height:((tileY+1)%this.height)+this.height-1;}
for(var mapX=-1,pxX=pxMinX;pxX<pxMaxX;mapX++,pxX+=this.tilesize){var tileX=mapX+tileOffsetX;if(tileX>=this.width||tileX<0){if(!this.repeat){continue;}
tileX=tileX>0?tileX%this.width:((tileX+1)%this.width)+this.width-1;}
if((tile=this.data[tileY][tileX])){if((anim=this.anims[tile-1])){anim.draw(pxX,pxY);}
else{this.tiles.drawTile(pxX,pxY,tile-1,this.tilesize);}}}}}});});

// lib/impact/game.js
ig.baked=true;ig.module('impact.game').requires('impact.impact','impact.entity','impact.collision-map','impact.background-map').defines(function(){ig.Game=ig.Class.extend({clearColor:'#000000',gravity:0,screen:{x:0,y:0},entities:[],namedEntities:{},collisionMap:ig.CollisionMap.staticNoCollision,backgroundMaps:[],backgroundAnims:{},cellSize:64,_deferredKill:[],_levelToLoad:null,_doSortEntities:false,staticInstantiate:function(){ig.game=this;return null;},loadLevel:function(data){this.screen={x:0,y:0};this.entities=[];this.namedEntities={};for(var i=0;i<data.entities.length;i++){var ent=data.entities[i];this.spawnEntity(ent.type,ent.x,ent.y,ent.settings);}
this.sortEntities();this.collisionMap=ig.CollisionMap.staticNoCollision;this.backgroundMaps=[];for(var i=0;i<data.layer.length;i++){var ld=data.layer[i];if(ld.name=='collision'){this.collisionMap=new ig.CollisionMap(ld.tilesize,ld.data);}
else{var newMap=new ig.BackgroundMap(ld.tilesize,ld.data,ld.tilesetName);newMap.anims=this.backgroundAnims[ld.tilesetName]||{};newMap.repeat=ld.repeat;newMap.distance=ld.distance;newMap.foreground=!!ld.foreground;this.backgroundMaps.push(newMap);}}},loadLevelDeferred:function(data){this._levelToLoad=data;},getEntityByName:function(name){return this.namedEntities[name];},getEntitiesByType:function(type){var entityClass=typeof(type)==='string'?ig.global[type]:type;var a=[];for(var i=0;i<this.entities.length;i++){var ent=this.entities[i];if(ent instanceof entityClass&&!ent._killed){a.push(ent);}}
return a;},spawnEntity:function(type,x,y,settings){var entityClass=typeof(type)==='string'?ig.global[type]:type;if(!entityClass){throw("Can't spawn entity of type "+type);}
var ent=new(entityClass)(x,y,settings||{});this.entities.push(ent);if(ent.name){this.namedEntities[ent.name]=ent;}
return ent;},sortEntities:function(){this.entities.sort(function(a,b){return a.zIndex-b.zIndex;});},sortEntitiesDeferred:function(){this._doSortEntities=true;},removeEntity:function(ent){if(ent.name){delete this.namedEntities[ent.name];}
ent._killed=true;ent.checkAgainst=ig.Entity.TYPE.NONE;ent.collides=ig.Entity.COLLIDES.NEVER;this._deferredKill.push(ent);},run:function(){this.update();this.draw();},update:function(){if(this._levelToLoad){this.loadLevel(this._levelToLoad);this._levelToLoad=null;}
if(this._doSortEntities){this.sortEntities();this._doSortEntities=false;}
for(var i=0;i<this.entities.length;i++){var ent=this.entities[i];if(!ent._killed){ent.update();}}
this.checkEntities();for(var i=0;i<this._deferredKill.length;i++){this.entities.erase(this._deferredKill[i]);}
this._deferredKill=[];for(var tileset in this.backgroundAnims){var anims=this.backgroundAnims[tileset];for(var a in anims){anims[a].update();}}},draw:function(){if(this.clearColor){ig.system.clear(this.clearColor);}
var mapIndex;for(mapIndex=0;mapIndex<this.backgroundMaps.length;mapIndex++){var map=this.backgroundMaps[mapIndex];if(map.foreground){break;}
map.setScreenPos(this.screen.x,this.screen.y);map.draw();}
for(var i=0;i<this.entities.length;i++){this.entities[i].draw();}
for(mapIndex;mapIndex<this.backgroundMaps.length;mapIndex++){var map=this.backgroundMaps[mapIndex];map.setScreenPos(this.screen.x,this.screen.y);map.draw();}},checkEntities:function(){var hash={};for(var e=0;e<this.entities.length;e++){var entity=this.entities[e];if(e.type==ig.Entity.TYPE.NONE&&e.checkAgainst==ig.Entity.TYPE.NONE&&e.collides==ig.Entity.COLLIDES.NEVER){continue;}
var checked={},xmin=Math.floor(entity.pos.x/this.cellSize),ymin=Math.floor(entity.pos.y/this.cellSize),xmax=Math.floor((entity.pos.x+entity.size.x)/this.cellSize)+1,ymax=Math.floor((entity.pos.y+entity.size.y)/this.cellSize)+1;for(var x=xmin;x<xmax;x++){for(var y=ymin;y<ymax;y++){if(!hash[x]){hash[x]={};hash[x][y]=[entity];}
else if(!hash[x][y]){hash[x][y]=[entity];}
else{var cell=hash[x][y];for(var c=0;c<cell.length;c++){if(entity.touches(cell[c])&&!checked[cell[c].id]){checked[cell[c].id]=true;ig.Entity.checkPair(entity,cell[c]);}}
cell.push(entity);}}}}}});});

// lib/math/astar.js
ig.baked=true;ig.module("math.astar").defines(function(){var Node=function(index,x,y,parent){this.index=index;this.x=x;this.y=y;this.parent=parent||null;this.f=0;this.g=0;};Node.prototype.getDistance=function(node){return(Math.abs(this.x-node.x)
+Math.abs(this.y-node.y));};var Map=function(grid){this.grid=grid;this.width=grid[0].length;this.height=grid.length;};Map.prototype.isWalkable=function(x,y){if(x<0||y<0||x>=this.width||y>=this.height){return false;}
return(!this.grid[y][x]);};Map.prototype.makeNode=function(x,y,parent){return new Node((x+(y*this.width)),x,y,parent);};Map.prototype.getAdjacent=function(n){var a=[];if(this.isWalkable(n.x,n.y-1)){a.push(this.makeNode(n.x,n.y-1,n));}
if(this.isWalkable(n.x,n.y+1)){a.push(this.makeNode(n.x,n.y+1,n));}
if(this.isWalkable(n.x-1,n.y)){a.push(this.makeNode(n.x-1,n.y,n));}
if(this.isWalkable(n.x+1,n.y)){a.push(this.makeNode(n.x+1,n.y,n));}
return a;};AStar=function(grid,startX,startY,goalX,goalY){var map=new Map(grid);var start=map.makeNode(startX,startY);var goal=map.makeNode(goalX,goalY);var openList=[start];var closedList=[];closedList[start.index]=true;var len=0;while(len=openList.length){var minF={index:-1,f:Infinity};for(var i=0;i<len;++i){if(openList[i].f<minF.f){minF.f=openList[i].f;minF.index=i;}}
var node=openList.splice(minF.index,1)[0];if(node.index===goal.index){var path=[];do{path.push([node.x,node.y]);}while(node=node.parent);path.reverse();return path;}else{var adjacent=map.getAdjacent(node);for(var i=0,j=adjacent.length;i<j;++i){var n=adjacent[i];if(!closedList[n.index]){n.g=(node.g+n.getDistance(node));n.f=(n.g+n.getDistance(goal));openList.push(n);closedList[n.index]=true;}}}}
return null;};});

// lib/game/entities/reticle.js
ig.baked=true;ig.module("game.entities.reticle").requires("impact.entity").defines(function(){EntityReticle=ig.Entity.extend({type:ig.Entity.TYPE.NONE,collides:ig.Entity.COLLIDES.NEVER,size:{x:32,y:32},animSheet:new ig.AnimationSheet("media/entities/reticle.png",32,32),zIndex:-2,rotateSpeed:(Math.PI/4),init:function(x,y,settings){this.parent(x,y,settings);this.addAnim("idle",1,[0]);},update:function(){this.pos={x:(ig.input.mouse.x+ig.game.screen.x-(this.size.x/2)),y:(ig.input.mouse.y+ig.game.screen.y-(this.size.y/2))};this.currentAnim.angle+=(this.rotateSpeed*ig.system.tick);this.parent();}});});

// lib/game/entities/location.js
ig.baked=true;ig.module("game.entities.location").requires("impact.entity").defines(function(){EntityLocation=ig.Entity.extend({_wmScalable:true,_wmDrawBox:true,_wmBoxColor:"rgba(0, 255, 0, 0.5)",type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.A,size:{x:16,y:16}});});

// lib/game/entities/warp.js
ig.baked=true;ig.module("game.entities.warp").requires("impact.entity").defines(function(){EntityWarp=ig.Entity.extend({_wmScalable:true,_wmDrawBox:true,_wmBoxColor:"rgba(0, 0, 255, 0.5)",type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.A,size:{x:16,y:16},level:null,location:null,check:function(other){if(other instanceof EntityHero&&this.level!=null&&ig.global[this.level]&&this.location!=null){ig.game.warp(ig.global[this.level],this.location);}}});});

// lib/game/entities/misc/corpse.js
ig.baked=true;ig.module("game.entities.misc.corpse").requires("impact.entity").defines(function(){EntityCorpse=ig.Entity.extend({zIndex:0,ttlTimer:null,init:function(x,y,settings){this.parent(x,y,settings);this.addAnim("death",0.25,settings.frames,true);this.ttlTimer=new ig.Timer(2.5);},update:function(){this.parent();var delta=this.ttlTimer.delta();if(delta>=-1&&delta<=0){this.currentAnim.alpha=(delta/-1);}
if(delta>=0){this.kill();}}});});

// lib/game/entities/abstract/base.js
ig.baked=true;ig.module("game.entities.abstract.base").requires("impact.entity","game.entities.misc.corpse").defines(function(){EntityBase=ig.Entity.extend({size:{x:16,y:16},type:ig.Entity.TYPE.NONE,collides:ig.Entity.COLLIDES.FIXED,health:1,zIndex:1,sounds:{},states:[],attackTimer:new ig.Timer(0),alpha:1,pushState:function(state,duration){if(!this.hasState(state)){this.states.push({type:state,timer:new ig.Timer(duration)});}},hasState:function(type){for(var i=0,j=this.states.length;i<j;++i){if(this.states[i].type==type){return true;}}
return false;},updateStates:function(){var indices=[];for(var i=0,j=this.states.length;i<j;++i){var state=this.states[i];if(state.timer.delta()>=0){indices.push(i);}}
for(var i=0,j=indices.length;i<j;++i){this.states.splice(i,1);}},getStateTimer:function(type){for(var i=0,j=this.states.length;i<j;++i){if(this.states[i].type==type){return this.states[i].timer;}}
return false;},getStateAnim:function(){var state="idle";if(this.vel.x!=0||this.vel.y!=0){state="move";}
if(this.hasState(EntityBase.STATES.PAIN)){state="pain";}
return state;},setAnim:function(anim,flip){flip=flip||false;if(this.anims[anim]&&this.currentAnim!=this.anims[anim]){this.currentAnim=this.anims[anim].rewind();}
this.currentAnim.flip.x=flip;},updateAnim:function(){this.setAnim(this.getStateAnim());},update:function(){this.updateStates();this.updateAnim();if(this.currentAnim){this.currentAnim.alpha=1;var t=this.getStateTimer(EntityBase.STATES.SPAWNING);if(t){var alpha=(1-(t.delta()/-t.target));this.currentAnim.alpha=alpha.limit(0,1);}
t=this.getStateTimer(EntityBase.STATES.INVINCIBLE);if(t){var alpha=Math.sin(20*ig.Timer.time).map(-1,1,0.1,1);this.currentAnim.alpha=alpha.limit(0,1);}}
this.parent();},triggerSound:function(sound){if(this.sounds[sound]){this.sounds[sound].play();}},receiveDamage:function(amount,from){if(this.hasState(EntityBase.STATES.INVINCIBLE)){return;}
this.parent(amount,from);if(this.health<=0){this.triggerSound("death");this.spawnCorpse();}else{this.pushState(EntityBase.STATES.PAIN,0.125);this.triggerSound("damage");}},spawnCorpse:function(){var pos={x:(this.pos.x-this.offset.x),y:(this.pos.y-this.offset.y)};var e=ig.game.spawnEntity(EntityCorpse,pos.x,pos.y,{animSheet:this.animSheet,size:{x:(this.size.x+this.offset.x),y:(this.size.y+this.offset.y)},frames:[24,25,26]});},spawn:function(type){var check=ig.Entity.TYPE.NONE;if(this.type==ig.Entity.TYPE.A){check=ig.Entity.TYPE.B;}else if(this.type==ig.Entity.TYPE.B){check=ig.Entity.TYPE.A;}
var pos={x:(this.pos.x+(this.size.x/2)),y:(this.pos.y+(this.size.y/2))};var e=ig.game.spawnEntity(type,pos.x,pos.y,{parent:this,type:this.type,checkAgainst:check,heading:this.heading});e.pos.x-=(e.size.x/2);e.pos.y-=(e.size.y/2);e.pos.x+=(e.vel.x*ig.system.tick*2);e.pos.y+=(e.vel.y*ig.system.tick*2);},attack:function(){if(this.attackTimer.delta()>=0){this.spawn(EntitySword);this.triggerSound("attack");this.attackTimer.set(0.25);}}});EntityBase.STATES={PAIN:0,SPAWNING:1,INVINCIBLE:2};});

// lib/math/vector.js
ig.baked=true;ig.module("math.vector").defines(function(){Vector=function(x,y){if(x&&x.x){this.set({x:x.x,y:x.y});}else{this.set({x:x,y:y});}};Vector.fromAngle=function(a,len){len=Number(len)||1;return new Vector(Math.sin(a),-Math.cos(a)).scale(len);};Vector.prototype.clone=function(){return new Vector(this.x,this.y);};Vector.prototype.getLength=function(){return Math.sqrt(this.x*this.x+this.y*this.y);};Vector.prototype.getAngle=function(){return Math.atan2(this.x,-this.y);};Vector.prototype.set=function(v){if(v){this.x=Number(v.x)||0;this.y=Number(v.y)||0;return this;}else{return this.zero();}};Vector.prototype.add=function(v){this.x+=v.x;this.y+=v.y;return this;};Vector.prototype.subtract=function(v){this.x-=v.x;this.y-=v.y;return this;};Vector.prototype.scale=function(n){this.x*=n;this.y*=n;return this;};Vector.prototype.normalize=function(){var length=this.getLength();if(length===0){return this;}else{return this.scale(1/length);}};Vector.prototype.zero=function(){this.x=0;this.y=0;return this;};});

// lib/game/entities/abstract/mob.js
ig.baked=true;ig.module("game.entities.abstract.mob").requires("game.entities.abstract.base","math.vector").defines(function(){EntityMob=EntityBase.extend({collides:ig.Entity.COLLIDES.PASSIVE,size:{x:12,y:8},offset:{x:2,y:8},zIndex:2,heading:new Vector(0,1),waypoints:null,init:function(x,y,settings){this.parent(x,y,settings);this.initAnimation();},initAnimation:function(){var idleDelay=0.4;var moveDelay=0.25;this.addAnim("idleDown",idleDelay,[0,1]);this.addAnim("idleUp",idleDelay,[4,5]);this.addAnim("idleLeft",idleDelay,[8,9]);this.addAnim("moveDown",moveDelay,[0,1]);this.addAnim("moveUp",moveDelay,[4,5]);this.addAnim("moveLeft",moveDelay,[8,9]);this.addAnim("painDown",moveDelay,[12,13]);this.addAnim("painUp",moveDelay,[16,17]);this.addAnim("painLeft",moveDelay,[20,21]);},updateAnim:function(){var dir;var flip=false;var h=this.heading;dir="Down";if(h.y<0){dir="Up";}else if(h.y>0){dir="Down";}
if(h.x<0){if(h.x<h.y){dir="Left";}}else if(h.x>0){if(h.x>h.y){dir="Left";flip=true;}}
var state=this.getStateAnim();this.setAnim(state+dir,flip);},update:function(){if(this.waypoints!==null){var point=new Vector().set(this.waypoints[0]);var pos=new Vector(this.pos).subtract(this.offset);var distance=point.clone().subtract(pos);if(distance.getLength()<2){this.pos.x=(point.x+this.offset.x-1);this.pos.y=(point.y+this.offset.y-1);this.waypoints.shift();}else{distance.normalize();this.vel.x=(this.maxVel.x*distance.x);this.vel.y=(this.maxVel.y*distance.y);}}
if(this.vel.x!==0||this.vel.y!==0){this.heading.set(this.vel).normalize();}
this.parent();}});});

// lib/game/entities/abstract/hero.js
ig.baked=true;ig.module("game.entities.abstract.hero").requires("game.entities.abstract.mob").defines(function(){EntityHero=EntityMob.extend({type:ig.Entity.TYPE.A,health:100,sounds:{attack:new ig.Sound("media/sounds/hero_attacks.*"),damage:new ig.Sound("media/sounds/hero_damage.*"),death:new ig.Sound("media/sounds/hero_death.*")},gold:0,update:function(){if(ig.input.state("left")){this.vel.x=-75;}else if(ig.input.state("right")){this.vel.x=75;}else{this.vel.x=0;}
if(ig.input.state("up")){this.vel.y=-75;}else if(ig.input.state("down")){this.vel.y=75;}else{this.vel.y=0;}
this.parent();if(ig.input.state("shoot")){var reticle=ig.game.getEntitiesByType(EntityReticle)[0];var r=new Vector(reticle.pos).add(new Vector(reticle.size).scale(0.5));var m=new Vector(this.pos).add(new Vector(this.size).scale(0.5));this.heading=r.subtract(m).normalize();this.attack();}},receiveDamage:function(damage,from){this.parent(damage,from);if(!this.hasState(EntityBase.STATES.INVINCIBLE)){this.pushState(EntityBase.STATES.INVINCIBLE,2.5);}}});});

// lib/game/entities/xam.js
ig.baked=true;ig.module("game.entities.xam").requires("game.entities.abstract.hero").defines(function(){EntityXam=EntityHero.extend({animSheet:new ig.AnimationSheet("media/entities/xam.png",16,16)});});

// lib/game/entities/torch.js
ig.baked=true;ig.module("game.entities.torch").requires("impact.entity").defines(function(){EntityTorch=ig.Entity.extend({animSheet:new ig.AnimationSheet("media/entities/objects.png",16,16),init:function(x,y,settings){this.parent(x,y,settings);this.addAnim("idle",0.2,[75,74,75,73]);}});});

// lib/game/entities/abstract/power-up.js
ig.baked=true;ig.module("game.entities.abstract.power-up").requires("impact.entity").defines(function(){EntityPowerUp=ig.Entity.extend({type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.A,size:{x:16,y:16},zIndex:-1,check:function(other){if(other instanceof EntityXam){this.affect(other);}},affect:function(other){}});});

// lib/game/entities/heal-point.js
ig.baked=true;ig.module("game.entities.heal-point").requires("game.entities.abstract.power-up").defines(function(){EntityHealPoint=EntityPowerUp.extend({animSheet:new ig.AnimationSheet("media/entities/powerups.png",16,16),cooldownTimer:new ig.Timer(),active:true,init:function(x,y,settings){this.parent(x,y,settings);this.addAnim("active",0.25,[14,15,16,15]);this.addAnim("inactive",1,[17]);},update:function(){if(!this.active&&this.cooldownTimer.delta()>=0){this.active=true;this.currentAnim=this.anims.active.rewind();}
this.parent();},affect:function(hero){if(this.active){hero.health=100;this.active=false;this.currentAnim=this.anims.inactive;this.cooldownTimer.set(30);}}});});

// lib/game/entities/save-point.js
ig.baked=true;ig.module("game.entities.save-point").requires("game.entities.abstract.power-up").defines(function(){EntitySavePoint=EntityPowerUp.extend({animSheet:new ig.AnimationSheet("media/entities/powerups.png",16,16),init:function(x,y,settings){this.parent(x,y,settings);this.addAnim("active",0.25,[0,1,2,1]);},affect:function(hero){}});});

// lib/game/entities/coin.js
ig.baked=true;ig.module("game.entities.coin").requires("game.entities.abstract.power-up").defines(function(){EntityCoin=EntityPowerUp.extend({animSheet:new ig.AnimationSheet("media/entities/powerups.png",16,16),pickupSound:new ig.Sound("media/sounds/pickup_coin.*"),goldValue:10,init:function(x,y,settings){this.parent(x,y,settings);this.addAnim("idle",0.15,[21,22,23,24,25,26,23,27]);this.pickupSound.volume=0.1;},affect:function(hero){hero.gold+=this.goldValue;this.pickupSound.play();this.kill();}});});

// lib/game/entities/abstract/monster.js
ig.baked=true;ig.module("game.entities.abstract.monster").requires("game.entities.abstract.mob","math.vector").defines(function(){EntityMonster=EntityMob.extend({type:ig.Entity.TYPE.B,checkAgainst:ig.Entity.TYPE.A,damage:1,phases:{},currentPhase:null,phaseTimer:null,check:function(other){other.receiveDamage(this.damage,this);},handleMovementTrace:function(res){if(res.collision.x||res.collision.y){if(res.collision.x){this.vel.x*=-1;}
if(res.collision.y){this.vel.y*=-1;}}
this.pos=res.pos;},moveRandom:function(){var r=Math.random().map(0,1,0,Math.PI*2);var v=Vector.fromAngle(r);this.vel={x:(this.maxVel.x*v.x),y:(this.maxVel.y*v.y)};},update:function(){var phase=this.currentPhase;if(phase!=null){if(phase.update){phase.update.call(this);}
if(this.phaseTimer!=null&&this.phaseTimer.delta()>=0&&phase.end){phase.end.call(this);}}
this.parent();},addPhase:function(id,phase){this.phases[id]=phase;if(this.currentPhase==null){this.gotoPhase(id);}},gotoPhase:function(id){var phase=this.currentPhase=this.phases[id];if(phase.init){phase.init.call(this);}
if(phase.duration){if(typeof phase.duration=="object"){var duration=Math.random().map(0,1,phase.duration.min,phase.duration.max);}else{var duration=phase.duration;}
this.phaseTimer=new ig.Timer(duration);}else{this.phaseTimer=null;}}});});

// lib/game/entities/goblin.js
ig.baked=true;ig.module("game.entities.goblin").requires("game.entities.abstract.monster").defines(function(){EntityGoblin=EntityMonster.extend({health:10,maxVel:{x:50,y:50},animSheet:new ig.AnimationSheet("media/entities/goblin.png",16,16),sounds:{attack:new ig.Sound("media/sounds/goblin_attacks.*"),damage:new ig.Sound("media/sounds/goblin_damage.*"),death:new ig.Sound("media/sounds/goblin_death.*")},pathTimer:null,init:function(x,y,settings){this.parent(x,y,settings);this.pathTimer=new ig.Timer(Math.random().map(0,1,0.5,1.5));},update:function(){if(!this.hasState(EntityBase.STATES.SPAWNING)){if(this.waypoints==null||this.pathTimer.delta()>=0){var player=ig.game.getPlayer();if(player){var distance=new Vector(this.pos).subtract(player.pos);if(distance.getLength()<200){this.waypoints=ig.game.tracePath(this,player);}else{this.waypoints=null;this.vel.x=0;this.vel.y=0;}}
this.pathTimer.reset();}}
this.parent();}});});

// lib/game/entities/bat.js
ig.baked=true;ig.module("game.entities.bat").requires("game.entities.abstract.monster").defines(function(){EntityBat=EntityMonster.extend({health:1,maxVel:{x:50,y:50},animSheet:new ig.AnimationSheet("media/entities/bat.png",16,16),sounds:{damage:new ig.Sound("media/sounds/bat_damage.*"),death:new ig.Sound("media/sounds/bat_death.*")},moveChangeTimer:null,init:function(x,y,settings){this.parent(x,y,settings);var delay=Math.random().map(0,1,1.5,3);this.moveChangeTimer=new ig.Timer(delay);this.moveRandom();},update:function(){if(this.moveChangeTimer.delta()>=0){this.moveRandom();this.moveChangeTimer.reset();}
this.parent();},handleMovementTrace:function(res){if(res.collision.x||res.collision.y){this.moveChangeTimer.reset();}
this.parent(res);}});});

// lib/game/entities/wizard.js
ig.baked=true;ig.module("game.entities.wizard").requires("game.entities.abstract.monster").defines(function(){EntityWizard=EntityMonster.extend({health:50,maxVel:{x:50,y:50},animSheet:new ig.AnimationSheet("media/entities/wizard.png",16,16),init:function(x,y,settings){this.parent(x,y,settings);this.addPhase("moveLeft",{duration:2,init:function(){this.vel={x:-this.maxVel.x,y:0};},end:function(){this.gotoPhase("moveRight");}});this.addPhase("moveRight",{duration:2,init:function(){this.vel={x:this.maxVel.x,y:0};},end:function(){this.gotoPhase("moveLeft");}});}});});

// lib/game/entities/cube.js
ig.baked=true;ig.module("game.entities.cube").requires("game.entities.abstract.monster").defines(function(){EntityCube=EntityMonster.extend({health:500,maxVel:{x:50,y:50},size:{x:24,y:24},offset:{x:4,y:6},animSheet:new ig.AnimationSheet("media/entities/cube.png",32,32),sounds:{damage:new ig.Sound("media/sounds/cube_damage.*"),death:new ig.Sound("media/sounds/cube_death.*")},init:function(x,y,settings){this.parent(x,y,settings);this.addPhase("moveLeft",{duration:2,init:function(){this.vel={x:-this.maxVel.x,y:0};},end:function(){this.gotoPhase("moveRight");}});this.addPhase("moveRight",{duration:2,init:function(){this.vel={x:this.maxVel.x,y:0};},end:function(){this.gotoPhase("moveDown");}});this.addPhase("moveDown",{duration:2,init:function(){this.vel={x:0,y:this.maxVel.y};},end:function(){this.gotoPhase("moveLeft");}});}});});

// lib/game/entities/abstract/spawner.js
ig.baked=true;ig.module("game.entities.abstract.spawner").requires("game.entities.abstract.base").defines(function(){EntitySpawner=EntityBase.extend({type:ig.Entity.TYPE.B,checkAgainst:ig.Entity.TYPE.BOTH,collides:ig.Entity.COLLIDES.FIXED,health:10,zIndex:-1,spawnInterval:5,spawnTimer:null,spawnEntity:null,init:function(x,y,settings){this.parent(x,y,settings);this.spawnTimer=new ig.Timer(this.spawnInterval);if(this.animSheet){this.addAnim("idle",1,[0]);this.addAnim("pain",1,[5]);}},update:function(){this.parent();if(this.spawnEntity!=null&&this.spawnTimer.delta()>=0){var e=ig.game.spawnEntity(this.spawnEntity,this.pos.x,this.pos.y);e.pushState(EntityBase.STATES.SPAWNING,0.3);this.spawnTimer.reset();}},spawnCorpse:function(){var pos={x:(this.pos.x-this.offset.x),y:(this.pos.y-this.offset.y)};var e=ig.game.spawnEntity(EntityCorpse,pos.x,pos.y,{animSheet:this.animSheet,size:{x:(this.size.x+this.offset.x),y:(this.size.y+this.offset.y)},frames:[1,2,3]});}});});

// lib/game/entities/spawn-invis.js
ig.baked=true;ig.module("game.entities.spawn-invis").requires("game.entities.abstract.spawner").defines(function(){EntitySpawnInvis=EntitySpawner.extend({type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.NONE,collides:ig.Entity.COLLIDES.NEVER,health:1,_wmDrawBox:true,_wmBoxColor:"rgba(255, 0, 0, 0.5)"});});

// lib/game/entities/spawn-pyramid.js
ig.baked=true;ig.module("game.entities.spawn-pyramid").requires("game.entities.abstract.spawner").defines(function(){EntitySpawnPyramid=EntitySpawner.extend({health:100,animSheet:new ig.AnimationSheet("media/entities/spawner_alpha.png",16,16)});});

// lib/game/entities/spawn-cave.js
ig.baked=true;ig.module("game.entities.spawn-cave").requires("game.entities.abstract.spawner").defines(function(){EntitySpawnCave=EntitySpawner.extend({health:200,size:{x:32,y:32},animSheet:new ig.AnimationSheet("media/entities/spawner_alpha_03.png",32,32)});});

// lib/game/entities/abstract/weapon.js
ig.baked=true;ig.module("game.entities.abstract.weapon").requires("impact.entity").defines(function(){EntityWeapon=ig.Entity.extend({type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.NONE,collides:ig.Entity.COLLIDES.PASSIVE,size:{x:8,y:8},offset:{x:4,y:4},maxVel:{x:150,y:150},animSheet:new ig.AnimationSheet("media/entities/weapons.png",16,16),zIndex:1,damage:1,init:function(x,y,settings){this.parent(x,y,settings);if(settings.heading){this.vel={x:settings.heading.x*this.maxVel.x,y:settings.heading.y*this.maxVel.y};}
if(this.currentAnim){this.currentAnim.angle=this.heading.getAngle();}},handleMovementTrace:function(res){if(res.collision.x||res.collision.y){if((res.collision.x&&res.tile.x==2)||(res.collision.y&&res.tile.y==2)){this.pos.x+=this.vel.x*ig.system.tick;this.pos.y+=this.vel.y*ig.system.tick;return;}
this.kill();}
this.parent(res);},check:function(other){other.receiveDamage(this.damage,this);this.kill();},collideWith:function(other,axis){if(other.type!=this.type){other.receiveDamage(this.damage,this);this.kill();}
this.parent(other,axis);}});});

// lib/game/entities/weapons/spear.js
ig.baked=true;ig.module("game.entities.weapons.spear").requires("game.entities.abstract.weapon").defines(function(){EntitySpear=EntityWeapon.extend({damage:10,maxVel:{x:250,y:250},init:function(x,y,settings){this.addAnim("idle",1,[12]);this.parent(x,y,settings);}});});

// lib/game/entities/weapons/sword.js
ig.baked=true;ig.module("game.entities.weapons.sword").requires("game.entities.abstract.weapon").defines(function(){EntitySword=EntityWeapon.extend({damage:5,init:function(x,y,settings){this.addAnim("idle",1,[0]);this.parent(x,y,settings);}});});

// lib/game/levels/test.js
ig.baked=true;ig.module('game.levels.test').requires('impact.image').defines(function(){LevelTest={"entities":[{"type":"EntityGoblin","x":98,"y":760},{"type":"EntityGoblin","x":66,"y":744},{"type":"EntityGoblin","x":402,"y":712},{"type":"EntityGoblin","x":418,"y":616},{"type":"EntityGoblin","x":514,"y":56},{"type":"EntityGoblin","x":258,"y":88},{"type":"EntityGoblin","x":82,"y":312},{"type":"EntityGoblin","x":402,"y":88},{"type":"EntityGoblin","x":274,"y":312},{"type":"EntityGoblin","x":114,"y":408},{"type":"EntityGoblin","x":290,"y":104},{"type":"EntityGoblin","x":162,"y":360},{"type":"EntityGoblin","x":98,"y":456},{"type":"EntityGoblin","x":290,"y":456},{"type":"EntityGoblin","x":290,"y":360},{"type":"EntityGoblin","x":258,"y":456},{"type":"EntityGoblin","x":450,"y":728},{"type":"EntityGoblin","x":450,"y":648},{"type":"EntityGoblin","x":482,"y":696},{"type":"EntityGoblin","x":514,"y":744},{"type":"EntityGoblin","x":482,"y":296},{"type":"EntityGoblin","x":466,"y":312},{"type":"EntityTorch","x":272,"y":16},{"type":"EntityHealPoint","x":176,"y":448},{"type":"EntitySavePoint","x":48,"y":80},{"type":"EntityBat","x":98,"y":360},{"type":"EntityBat","x":162,"y":392},{"type":"EntityBat","x":146,"y":456},{"type":"EntityBat","x":194,"y":440},{"type":"EntityBat","x":242,"y":360},{"type":"EntityBat","x":290,"y":408},{"type":"EntityBat","x":418,"y":664},{"type":"EntityBat","x":546,"y":712},{"type":"EntityBat","x":418,"y":744},{"type":"EntityBat","x":338,"y":120},{"type":"EntityTorch","x":160,"y":48},{"type":"EntityTorch","x":320,"y":16},{"type":"EntityTorch","x":80,"y":48},{"type":"EntityCoin","x":80,"y":192},{"type":"EntityCoin","x":64,"y":208},{"type":"EntityCube","x":184,"y":312},{"type":"EntitySpawnCave","x":288,"y":64,"settings":{"spawnEntity":"EntityGoblin","spawnInterval":2}},{"type":"EntityWarp","x":400,"y":528,"settings":{"level":"LevelVillage","location":"loc_a"}},{"type":"EntityLocation","x":64,"y":96,"settings":{"name":"loc_spawn"}},{"type":"EntityLocation","x":400,"y":544,"settings":{"name":"loc_b"}}],"layer":[{"name":"ground","width":50,"height":50,"linkWithCollision":false,"visible":1,"tilesetName":"media/tilesets/cave.png","repeat":false,"distance":"1","tilesize":16,"data":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,32,32,32,32,32,6,32,32,32,32,18,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,1,1,1,1,1,1,16,32,32,32,32,6,32,32,32,32,32,6,32,32,33,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,1,1,4,1,4,1,31,32,32,32,32,32,32,32,32,32,32,32,32,32,33,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,2,1,1,1,1,1,46,32,32,32,32,32,6,32,32,32,32,32,32,32,48,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,2,1,1,1,0,0,0,0,0,0,32,32,32,32,6,32,32,32,32,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,2,1,1,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,2,2,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,1,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,31,32,32,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,31,32,32,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,46,47,47,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,3,1,1,1,4,1,1,1,1,1,1,2,2,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,2,1,2,2,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,2,1,1,1,1,1,1,1,3,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,16,17,17,17,18,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,31,32,32,32,33,1,2,2,2,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,4,1,1,2,31,32,32,32,33,1,1,1,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,31,32,32,32,33,1,4,1,1,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,4,1,1,31,32,32,32,33,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,31,32,32,32,33,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]},{"name":"cave_walls","width":50,"height":50,"linkWithCollision":true,"visible":1,"tilesetName":"media/tilesets/cave.png","repeat":false,"distance":"1","tilesize":16,"data":[[26,26,26,26,26,26,26,26,26,26,26,26,26,26,42,24,23,23,23,23,23,23,22,40,41,41,41,41,41,41,42,24,23,23,24,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,13,14,14,14,14,14,14,14,14,14,14,14,42,24,24,23,23,23,23,109,23,22,23,23,23,109,23,109,96,23,24,23,23,22,30,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,27,24,23,23,109,23,23,23,23,23,23,23,23,24,55,89,89,89,56,56,89,57,109,23,23,23,23,109,109,109,55,56,89,57,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,27,24,23,23,23,23,23,109,23,23,23,109,23,55,90,0,0,0,0,0,0,88,56,89,56,89,89,56,89,56,90,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,27,55,56,89,89,89,56,89,56,89,56,56,56,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,28,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,86,86,87,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,28,70,0,0,0,0,58,86,86,86,86,86,86,60,0,0,0,0,0,0,0,58,86,86,86,86,86,60,0,0,72,10,11,11,45,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,28,70,0,0,0,0,72,10,44,44,44,44,12,85,86,60,0,0,0,0,0,72,10,11,11,11,12,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,28,70,0,0,0,58,87,25,26,26,26,26,43,44,12,85,86,86,86,86,86,87,25,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,28,85,60,0,0,72,10,45,26,26,26,26,26,26,43,44,44,44,44,44,44,11,45,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,43,12,70,0,0,72,40,41,41,41,41,41,15,26,26,26,26,26,26,26,26,26,26,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,28,70,0,0,88,56,56,56,56,56,57,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,28,70,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,28,70,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,28,85,86,86,86,86,86,60,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,43,11,11,11,11,11,12,70,0,0,72,40,41,41,41,41,41,41,41,15,26,26,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,13,14,14,14,14,14,42,75,0,0,88,56,56,56,56,56,56,56,57,25,26,26,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,55,56,56,56,56,56,90,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,27,70,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,27,85,86,86,87,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,43,11,11,11,11,45,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,27,85,86,60,0,58,86,86,86,86,86,86,86,86,60,0,58,86,87,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,43,11,12,70,0,72,10,11,11,11,11,11,11,12,70,0,72,10,11,45,13,14,14,14,14,14,15,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,26,27,24,23,23,23,22,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,26,27,24,91,92,93,22,40,15,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,26,27,55,106,107,108,57,22,40,15,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,26,27,70,0,0,0,72,22,22,40,15,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,26,27,70,0,0,0,88,57,22,22,40,15,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,26,27,70,0,0,0,0,88,57,22,22,40,15,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,26,27,70,0,0,0,0,0,88,57,22,22,40,15,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,26,27,70,0,0,0,0,0,0,88,57,22,22,40,14,14,14,15,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,26,27,70,0,0,0,0,0,0,0,88,57,22,23,23,23,22,25,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,26,27,70,0,0,0,0,0,0,0,0,88,57,23,23,23,22,25,26,26,26,26,26,26,26,26,26,26,26],[26,26,26,26,27,70,0,72,25,26,26,26,26,26,26,27,70,0,72,25,26,13,42,70,0,0,0,0,0,0,0,0,0,88,56,56,56,57,25,26,26,26,26,26,26,26,26,26,26,26],[26,13,41,41,42,70,0,72,40,41,15,26,26,26,26,27,70,0,72,25,13,42,55,90,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26],[26,27,55,56,56,90,0,88,56,57,25,26,26,26,26,27,70,0,72,40,42,55,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26],[26,27,70,0,0,0,0,0,0,72,25,26,26,26,26,27,70,0,88,56,56,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,25,26,26,26,26,26,26,26,26,26,26,26],[26,27,70,0,0,0,0,0,0,72,25,26,26,26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,87,25,26,26,26,26,26,26,26,26,26,26,26],[26,27,70,0,0,0,0,0,0,72,25,26,26,26,26,27,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,86,87,10,45,26,26,26,26,26,26,26,26,26,26,26],[26,27,85,86,86,86,86,86,86,87,25,26,26,26,26,27,85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,10,11,45,26,26,26,26,26,26,26,26,26,26,26,26],[26,43,11,11,11,11,11,11,11,11,45,26,26,26,26,43,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,45,26,26,26,26,26,26,26,26,26,26,26,26,26,26]]},{"name":"collision","width":50,"height":50,"linkWithCollision":false,"visible":1,"tilesetName":"media/tilesets/collision.png","repeat":false,"distance":"1","tilesize":16,"data":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]}]};LevelTestResources=[new ig.Image('media/tilesets/cave.png'),new ig.Image('media/tilesets/cave.png')];});

// lib/game/levels/village.js
ig.baked=true;ig.module('game.levels.village').requires('impact.image').defines(function(){LevelVillage={"entities":[{"type":"EntitySavePoint","x":464,"y":16},{"type":"EntityHealPoint","x":224,"y":32},{"type":"EntitySavePoint","x":160,"y":208},{"type":"EntityBat","x":114,"y":40},{"type":"EntityBat","x":162,"y":40},{"type":"EntityBat","x":34,"y":120},{"type":"EntityBat","x":370,"y":104},{"type":"EntityGoblin","x":338,"y":24},{"type":"EntityGoblin","x":306,"y":216},{"type":"EntityGoblin","x":146,"y":168},{"type":"EntityGoblin","x":18,"y":216},{"type":"EntityGoblin","x":290,"y":88},{"type":"EntityWarp","x":176,"y":304,"settings":{"size":{"x":48,"y":16},"level":"LevelTest","location":"loc_b"}},{"type":"EntityLocation","x":192,"y":288,"settings":{"name":"loc_a"}}],"layer":[{"name":"Ground","width":30,"height":20,"linkWithCollision":false,"visible":1,"tilesetName":"media/tilesets/village.png","repeat":false,"distance":"1","tilesize":16,"data":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]},{"name":"Objects","width":30,"height":20,"linkWithCollision":false,"visible":1,"tilesetName":"media/tilesets/village.png","repeat":false,"distance":"1","tilesize":16,"data":[[100,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,97,0,0,0,0,0],[97,51,26,26,26,49,0,0,0,0,0,0,0,0,0,0,0,0,149,150,2,0,2,0,97,0,0,0,0,0],[97,26,247,248,249,26,0,0,0,0,0,0,0,2,0,0,0,2,173,174,0,43,72,2,97,0,244,246,0,0],[97,26,271,272,273,26,25,25,25,25,25,25,25,2,2,2,2,2,2,2,2,90,96,2,97,0,268,270,0,0],[97,26,295,296,297,26,0,0,0,0,0,3,25,0,2,2,21,2,0,2,2,212,213,2,97,0,268,270,0,0],[97,49,26,26,26,50,52,7,8,9,10,0,25,0,0,43,45,47,2,2,2,138,144,2,97,0,268,270,0,0],[97,0,0,0,0,0,0,31,32,33,34,0,25,0,43,45,45,45,47,0,2,0,2,0,97,0,268,270,0,0],[97,2,49,0,0,14,0,55,56,57,58,0,25,2,45,67,191,71,167,0,0,2,0,0,97,0,268,270,0,0],[97,54,0,0,59,38,65,79,80,81,82,0,25,0,90,91,165,95,96,0,0,0,0,0,97,0,268,270,0,0],[97,0,0,59,208,38,209,65,104,105,0,0,25,0,210,190,165,190,211,0,0,0,0,0,97,0,268,270,145,146],[97,0,59,208,208,38,209,209,65,0,0,0,25,0,210,92,168,94,211,0,0,14,0,0,97,0,268,270,169,170],[97,0,159,208,208,38,209,209,160,0,0,0,25,0,114,116,192,118,120,0,59,38,65,0,97,0,268,270,0,0],[97,0,159,208,208,38,209,209,160,0,0,0,25,0,138,140,186,142,144,0,83,62,89,0,97,0,268,270,0,0],[97,0,159,208,60,62,64,209,160,0,0,0,25,0,0,0,25,0,0,0,107,181,113,0,97,0,268,270,0,0],[97,2,159,60,158,158,88,64,160,0,0,0,25,0,0,0,25,0,0,0,131,179,137,0,97,0,268,270,0,0],[97,0,83,84,254,278,254,88,89,0,0,0,25,0,0,0,25,0,0,0,0,25,26,0,97,0,268,270,0,0],[97,0,230,158,85,86,87,158,231,0,0,0,25,25,25,25,25,25,25,25,25,25,26,0,97,0,268,270,0,0],[97,0,107,108,109,110,111,108,113,0,0,0,25,0,0,0,0,0,26,26,26,26,0,0,97,0,268,270,0,0],[97,0,131,132,133,25,135,132,137,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,97,0,292,294,0,0],[98,98,98,98,98,98,98,98,98,98,75,0,25,0,74,98,98,98,98,98,98,98,98,98,73,0,0,0,0,0]]},{"name":"collision","width":30,"height":20,"linkWithCollision":false,"visible":1,"tilesetName":"media/tilesets/collision.png","repeat":false,"distance":"1","tilesize":16,"data":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0],[1,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,0,0,0,0,0],[1,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0],[1,0,2,2,2,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0],[1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0],[1,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0],[1,0,0,0,0,1,0,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0],[1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0],[1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,0,0,0,1,1],[1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,1,0,0,0,1,1],[1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0],[1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0],[1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0],[1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],[1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],[1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],[1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0]]}]};LevelVillageResources=[new ig.Image('media/tilesets/village.png'),new ig.Image('media/tilesets/village.png')];});

// lib/game/main.js
ig.baked=true;ig.module("game.main").requires("impact.game","impact.font","math.astar","game.entities.reticle","game.entities.location","game.entities.warp","game.entities.abstract.base","game.entities.abstract.mob","game.entities.abstract.hero","game.entities.xam","game.entities.torch","game.entities.abstract.power-up","game.entities.heal-point","game.entities.save-point","game.entities.coin","game.entities.abstract.monster","game.entities.goblin","game.entities.bat","game.entities.wizard","game.entities.cube","game.entities.abstract.spawner","game.entities.spawn-invis","game.entities.spawn-pyramid","game.entities.spawn-cave","game.entities.weapons.spear","game.entities.weapons.sword","game.levels.test","game.levels.village").defines(function(){O2Engine=ig.Game.extend({spawnLocation:null,init:function(){ig.input.bind(ig.KEY.UP_ARROW,"up");ig.input.bind(ig.KEY.W,"up");ig.input.bind(ig.KEY.LEFT_ARROW,"left");ig.input.bind(ig.KEY.A,"left");ig.input.bind(ig.KEY.DOWN_ARROW,"down");ig.input.bind(ig.KEY.S,"down");ig.input.bind(ig.KEY.RIGHT_ARROW,"right");ig.input.bind(ig.KEY.D,"right");ig.input.bind(ig.KEY.SPACE,"shoot");ig.input.bind(ig.KEY.MOUSE1,"shoot");this.spawnLocation="loc_a";this.loadLevel(LevelVillage);ig.music.add("media/music/forest.*");ig.music.volume=0.25;ig.music.play();},warp:function(levelObject,location){this.spawnLocation=location;this.loadLevelDeferred(levelObject);},loadLevel:function(levelObject){this.parent(levelObject);this.spawnEntity(EntityReticle,0,0);var location=this.getEntityByName(this.spawnLocation);if(location){this.spawnEntity(EntityXam,location.pos.x,location.pos.y);}else{console.log(location);}},update:function(){this.parent();this.updateViewport();this.sortEntities();},updateViewport:function(){var player=this.getPlayer();if(!player){return;}
var viewport={x:((player.pos.x+(player.size.x/2))-(ig.system.width/2)),y:((player.pos.y+(player.size.y/2))-(ig.system.height/2))};var mapSize={x:(this.collisionMap.width*this.collisionMap.tilesize),y:(this.collisionMap.height*this.collisionMap.tilesize)};var bounds={x:(mapSize.x-ig.system.width),y:(mapSize.y-ig.system.height)};this.screen.x=viewport.x.limit(0,bounds.x).round();this.screen.y=viewport.y.limit(0,bounds.y).round();},draw:function(){this.parent();},getPlayer:function(){return this.getEntitiesByType(EntityXam)[0];},sortEntities:function(){this.entities.sort(function(a,b){if(a.zIndex===b.zIndex){var ay=(a.pos.y+a.size.y-a.offset.y);var by=(b.pos.y+b.size.y-b.offset.y);return(ay-by);}else{return(a.zIndex-b.zIndex);}});},getWalkGrid:function(){var grid=ig.copy(this.collisionMap.data);var tilesize=this.collisionMap.tilesize;var entities=this.getEntitiesByType(EntityBase);for(var i=0,j=entities.length;i<j;++i){var e=entities[i];if(e.collides==ig.Entity.COLLIDES.FIXED){var pos=this.getEntityGridPosition(e);var pos={x:Math.floor(e.pos.x/tilesize),y:Math.floor(e.pos.y/tilesize)};var end={x:Math.floor((e.pos.x+e.size.x-1)/tilesize),y:Math.floor((e.pos.y+e.size.y-1)/tilesize)};for(var y=pos.y;y<=end.y;++y){for(var x=pos.x;x<=end.x;++x){grid[y][x]=1;}}}}
return grid;},getEntityGridPosition:function(entity){var tilesize=this.collisionMap.tilesize;return{x:Math.floor(entity.pos.x/tilesize),y:Math.floor(entity.pos.y/tilesize)};},tracePath:function(entityFrom,entityTo){var nodeFrom=this.getEntityGridPosition(entityFrom);var nodeTo=this.getEntityGridPosition(entityTo);var walkGrid=ig.game.getWalkGrid();var path=AStar(walkGrid,nodeFrom.x,nodeFrom.y,nodeTo.x,nodeTo.y);if(path==null){return null;}
var waypoints=[];var tilesize=this.collisionMap.tilesize;for(var i=0,j=path.length;i<j;++i){waypoints.push({x:(path[i][0]*tilesize),y:(path[i][1]*tilesize)});}
waypoints.shift();return waypoints;}});ig.main("#canvas",O2Engine,60,320,240,2);});